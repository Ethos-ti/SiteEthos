name: CI

on:
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  build_assets:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')
    container:
      image: node:20
    env:
      THEME_NAME: hacklab-theme
    steps:
      - uses: actions/checkout@v2
      - name: Remove dist directory
        run: rm -rf themes/hacklab-theme/dist/*
      - name: Remove lock
        run: rm -rf themes/hacklab-theme/package-lock.json
      - name: Remove node_modules
        run: rm -rf themes/hacklab-theme/node_modules
      - name: Install npm packages
        run: npm --prefix themes/hacklab-theme/ install
      - name: Run production build
        run: npm --prefix themes/hacklab-theme/ run production
      - name: check files
        run:   ls -lhtra themes/hacklab-theme
      - name: Remove node_modules directory
        run: rm -rf themes/hacklab-theme/node_modules
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: hacklab-theme
          path: themes/hacklab-theme

  create_release:
    runs-on: ubuntu-latest
    needs: [build_assets]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set Release Tag
        id: get_tag
        run: |
          if [[ $GITHUB_REF == refs/heads/main ]]; then
            echo "tag=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "tag=${GITHUB_REF##*/}" >> $GITHUB_ENV
          fi
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: hacklab-theme
          path: ./hacklab-theme/
      - name: Zip artifact
        run: |
          cd ./hacklab-theme
          ls
          zip -r hacklab-theme.zip .
      - name: Create GitHub Release
        id: create_release_develop
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.tag }}
          release_name: Release ${{ env.tag }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release_develop.outputs.upload_url }}
          asset_path: ./hacklab-theme/hacklab-theme.zip
          asset_name: hacklab-theme.zip
          asset_content_type: application/zip
